# https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt#:~:text=*UltiSnips%2Dsnippet%2Doptions*

# default situation is at whiterspace or beginning, so add i or w symbol can improve this situation
# w: after word, can trigger(have a whiterspace with word)
# i: in word, can be trigger, ((no whiterspace with word)
# b: just at the beginning of line will be trigger
# A: automatically
snippet shell "#!/usr/....(self:all)" b
#!/usr/bin/env ${1:bash}
endsnippet

snippet li
[${1:link}](${2:url})
endsnippet

# TODO double right brack to jump(not support)
# use rg to adjust double brack
# and delete brack, how to delete a double automatically
#snippet ( "better jump" iA
#($1)$2
#endsnippet

#snippet { "better jump" iA
#{$1}$2
#endsnippet

#snippet [ "better jump" iA
#[$1]$2
#endsnippet

#snippet " "better jump" iA
#"$1"$2
#endsnippet

snippet == "arrow"
==> $1
endsnippet

snippet email "email"
jyao4783@gmail.com
endsnippet

snippet lorem2 "lorem2"
Lorem
ipsum dolor s
it amet, consectetur adipi
sicing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna
aliqua. Ut enim ad minim veniam, quis nostrud exercita
tion ullamco laboris nisi ut aliquip ex ea com
modo consequat. Duis aute irure dolor in repreh
enderit in voluptate velit esse cillum dolore eu fugiat nulla pari
atur. Excepteur sint occaecat cupidatat
non proident, sunt in culpa qui officia deserunt mollit anim id est
laborum.
endsnippet

snippet htmlc "html comment" b
<!-- $1 -->
endsnippet

# snippet hello "welcom message"
# Hello, World!
# endsnippet

snippet clang-format "clang-format template"
BasedOnStyle:  Google
Language: Cpp
ColumnLimit: 100
IndentWidth: 2
TabWidth: 8
UseTab: Never
IndentCaseLabels: false
BreakBeforeBraces: Custom
AlignEscapedNewlinesLeft: false
AllowShortFunctionsOnASingleLine: false
AlignTrailingComments: true
SpacesBeforeTrailingComments: 2
PenaltyReturnTypeOnItsOwnLine: 200
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
BinPackParameters: false
BreakBeforeBinaryOperators: true
BreakBeforeTernaryOperators: true
ContinuationIndentWidth: 2
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: No
AlwaysBreakTemplateDeclarations: No
AlignEscapedNewlines: DontAlign
BinPackArguments: false
BraceWrapping:
  AfterClass:      false
  AfterControlStatement: false
  AfterEnum:       false
  AfterFunction:   true
  AfterObjCDeclaration: false
  AfterStruct:     false
  AfterUnion:      false
  BeforeCatch:     false
  BeforeElse:      false
  IndentBraces:    false
PointerAlignment: Right
SortIncludes: true
Cpp11BracedListStyle: false
IncludeCategories:
  - Regex:           '<[/[:alnum:].]+>'
    Priority:        0
  - Regex:           '^"(nvim|vim)/'
    Priority:        1
    SortPriority:    1
    CaseSensitive:   false
AlignConsecutiveMacros: AcrossEmptyLines
IndentPPDirectives: AfterHash
SpaceBeforeParens: ControlStatementsExceptControlMacros
PPIndentWidth: 1
ForEachMacros:
  - FOR_ALL_AUEVENTS
  - FOR_ALL_AUPATS_IN_EVENT
  - FOR_ALL_BUFFERS
  - FOR_ALL_BUFFERS_BACKWARDS
  - FOR_ALL_FRAMES
  - FOR_ALL_QFL_ITEMS
  - FOR_ALL_SIGNS_IN_BUF
  - FOR_ALL_TABS
  - FOR_ALL_TAB_WINDOWS
  - FOR_ALL_WINDOWS_IN_TAB
  - RBUFFER_EACH
  - RBUFFER_EACH_REVERSE
  - RBUFFER_UNTIL_EMPTY
  - RBUFFER_UNTIL_FULL
  - kl_iter
endsnippet
