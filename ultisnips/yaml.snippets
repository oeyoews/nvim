# vim: ft=snippets
snippet stale "stale"
# Number of days of inactivity before an issue becomes stale
daysUntilStale: 30
# Number of days of inactivity before a stale issue is closed
daysUntilClose: 7
# Issues with these labels will never be considered stale
exemptLabels:
  - pinned
  - security
# Label to use when marking an issue as stale
staleLabel: wontfix
# Comment to post when marking an issue as stale. Set to `false` to disable
markComment: >
  This issue has been automatically marked as stale because it has not had
  recent activity. It will be closed if no further activity occurs. Thank you
  for your contributions.
# Comment to post when closing a stale issue. Set to `false` to disable
closeComment: false
endsnippet

snippet jekyll "jekyll-theme-cayman"
# @FileName: _config.yml

#title: $1
#description:
theme: jekyll-theme-cayman
show_downloads: false
endsnippet

snippet clang-format "clang-format template"
BasedOnStyle:  Google
Language: Cpp
ColumnLimit: 100
IndentWidth: 2
TabWidth: 8
UseTab: Never
IndentCaseLabels: false
BreakBeforeBraces: Custom
AlignEscapedNewlinesLeft: false
AllowShortFunctionsOnASingleLine: false
AlignTrailingComments: true
SpacesBeforeTrailingComments: 2
PenaltyReturnTypeOnItsOwnLine: 200
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
BinPackParameters: false
BreakBeforeBinaryOperators: true
BreakBeforeTernaryOperators: true
ContinuationIndentWidth: 2
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: No
AlwaysBreakTemplateDeclarations: No
AlignEscapedNewlines: DontAlign
BinPackArguments: false
BraceWrapping:
  AfterClass:      false
  AfterControlStatement: false
  AfterEnum:       false
  AfterFunction:   true
  AfterObjCDeclaration: false
  AfterStruct:     false
  AfterUnion:      false
  BeforeCatch:     false
  BeforeElse:      false
  IndentBraces:    false
PointerAlignment: Right
SortIncludes: true
Cpp11BracedListStyle: false
IncludeCategories:
  - Regex:           '<[/[:alnum:].]+>'
    Priority:        0
  - Regex:           '^"(nvim|vim)/'
    Priority:        1
    SortPriority:    1
    CaseSensitive:   false
AlignConsecutiveMacros: AcrossEmptyLines
IndentPPDirectives: AfterHash
SpaceBeforeParens: ControlStatementsExceptControlMacros
PPIndentWidth: 1
ForEachMacros:
  - FOR_ALL_AUEVENTS
  - FOR_ALL_AUPATS_IN_EVENT
  - FOR_ALL_BUFFERS
  - FOR_ALL_BUFFERS_BACKWARDS
  - FOR_ALL_FRAMES
  - FOR_ALL_QFL_ITEMS
  - FOR_ALL_SIGNS_IN_BUF
  - FOR_ALL_TABS
  - FOR_ALL_TAB_WINDOWS
  - FOR_ALL_WINDOWS_IN_TAB
  - RBUFFER_EACH
  - RBUFFER_EACH_REVERSE
  - RBUFFER_UNTIL_EMPTY
  - RBUFFER_UNTIL_FULL
  - kl_iter
endsnippet

snippet page "github page" b
# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  schedule:
    - cron: "00 16 * * *"
  # Runs on pushes targeting the default branch
  # push:
  #   branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# TODO: use cache actions
jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
endsnippet
